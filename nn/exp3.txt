#  Exp 3 - Perceptron

import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Training data
x_train = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y_train = np.array([[0], [0], [0], [1]])

# Model definition
model = Sequential([
    Dense(64, activation='relu', input_shape=(x_train.shape[1],)),
    Dense(32, activation='relu'),
    Dense(1)
])
model.compile(optimizer='sgd', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=100, verbose=0)

# Predictions
y_pred = model.predict(x_train)
print("Test Input:\n", x_train)
print("Predicted Output:\n", y_pred)
